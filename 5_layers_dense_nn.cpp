#include <stdlib.h>
#include <math.h>
#include <stdio.h>

#include "nn_function.h"


# define inputLength 19

// This is a dense neural network with 5 layers, weight updated by SGD

# define layer1_neuronNum 128    // ⬇
# define layer2_neuronNum 16    // ⬇
# define layer3_neuronNum 16    // ⬇
# define layer4_neuronNum 8    // ⬇
# define layer5_neuronNum 1     // ⬇

// 把保存的权重复制到这下面

static double savedWeightTensor_1[layer1_neuronNum][inputLength + 1] =
{
{ -0.379264, 0.074498,-0.417283,-0.366376,-0.115839, 0.018760,-0.107877,-0.146761, 0.230166, 0.151240,-0.050984,-0.033550,-0.014835,-0.339737,-0.317119, 0.201412,-0.036475,-0.263677, 0.189029, 0.501911 },
{ -0.295474,-0.100253,-0.167430,-0.307373, 0.022569,-0.490212,-0.605900, 0.218838,-0.442027, 0.746222, 0.141337,-0.752896,-0.304070, 0.115454,-0.182037, 0.118772,-0.056173,-0.333244,-0.489989, 0.023935 },
{ -0.040571, 0.117424, 0.371003,-0.136868,-0.305110, 0.377578,-0.087148,-0.192626, 0.536174,-0.216982,-0.028073, 0.315537,-0.482211, 0.395389, 0.369203,-0.190149, 0.018200, 0.435163,-0.423736,-0.586487 },
{ -0.229233,-0.076130,-0.077245, 0.076981,-0.019824,-0.264921,-0.020132, 0.164483, 0.294359, 0.424599,-0.129601,-0.079495,-0.052563, 0.346818, 0.414690,-0.173003, 0.167549, 0.054786,-0.163857,-0.320075 },
{  0.083325,-0.640351,-0.414962, 0.384327, 0.087979, 0.328046, 0.237413,-0.452048,-0.486991, 0.093306, 0.000730, 0.269771,-0.091253,-0.699759,-0.192680, 0.328419,-0.120305,-0.231513, 0.030176, 0.247875 },
{ -0.165284,-0.022208,-0.058274, 0.283755,-0.112782,-0.577299,-0.125463, 0.015695,-0.276100, 0.266897, 0.205399,-0.117634,-0.032383,-0.066919,-0.296503, 0.229266, 0.233217,-0.296099,-0.525225, 0.122604 },
{  0.154676,-0.165395, 0.144240,-0.317917,-0.531666, 0.281874, 0.227611,-0.125480,-0.128083, 0.463378, 0.184681,-0.245192,-0.484571, 0.439894, 0.165015,-0.336486, 0.131626,-0.304398,-0.361676,-0.326957 },
{  0.339745,-0.546703,-0.141575, 0.247078, 0.410842,-0.336390,-0.449230, 0.057602,-0.257113, 0.406041,-0.197337, 0.238965, 0.071835,-0.296928,-0.354816, 0.026665, 0.322378,-0.491880, 0.890033,-0.397352 },
{  0.197499, 0.053307,-0.042287, 0.470426,-0.010014, 0.095659,-0.203671, 0.046412,-0.346857,-0.171638,-0.253046,-0.048560,-0.047875,-0.432784, 0.263491,-0.425505, 0.135003,-0.405507,-0.151420,-0.095980 },
{ -0.198813, 0.110789,-0.296810, 0.256340,-0.068809,-0.198489, 0.231555,-0.226941,-0.090607,-0.024217, 0.240196,-0.406724, 0.350370, 0.176073,-0.178418, 0.517488, 0.415232, 0.180340, 0.331224,-0.445312 },
{ -0.028013,-0.373205,-0.148451, 0.330858, 0.197090,-0.299668,-0.102367,-0.338611,-0.292796, 0.432261, 0.181045,-0.202743,-0.156402,-0.426850,-0.320589, 0.384575, 0.119122,-0.095961,-0.357270,-0.511986 },
{  0.593493,-1.084625, 0.829006,-0.846769, 0.412850,-1.270969,-0.377872, 0.223328,-0.995866, 0.255267,-0.598222, 0.399898,-0.341088, 0.372522,-0.359718, 0.383363,-0.464726, 0.447599,-0.569571,-0.540551 },
{ -0.439498, 0.194112, 0.344693,-0.100414, 0.262932, 0.294779, 0.254970, 0.128278,-0.102552, 0.039828,-0.327722, 0.047018,-0.066175, 0.063965,-0.513827,-0.305391,-0.019618,-0.200987, 0.100282,-0.210359 },
{  0.245635, 0.025511, 0.252557,-0.062688, 0.237992,-0.054135,-0.309356, 0.209986,-0.314618, 0.124096, 0.225987,-0.010706,-0.073225, 0.381360,-0.408551, 0.059962, 0.127276,-0.052587,-0.352192,-0.363453 },
{  0.129076,-0.068311, 0.117124,-0.036101, 0.215268,-0.001838,-0.363835, 0.039431, 0.716325, 0.006342,-0.189840, 0.106771,-0.101401, 0.319173,-0.051844, 0.034455,-0.101826, 0.054176,-0.073169,-0.285697 },
{ -0.440553,-0.238682,-0.142257,-0.180771,-0.170209, 0.123568,-0.347906, 0.217668,-0.184088, 0.013896,-0.318694, 0.086251, 0.213422, 0.128494, 0.380426,-0.204725, 0.745076,-0.073504,-0.178863,-0.201530 },
{ -0.365310,-0.068795,-0.079492,-0.020864, 0.350295,-0.303369, 0.250179,-0.143443, 0.111357, 0.043627,-0.851882,-0.382562,-0.476437,-0.132739,-0.062130,-0.124883, 0.320061,-0.301611, 0.377469,-0.058656 },
{  0.074115,-0.847220,-0.166685, 0.185489,-0.028962, 0.202113,-0.168735, 0.407390,-0.056925,-0.838527,-0.279259, 0.102455,-0.257174, 0.201167,-0.215865, 0.385956, 0.194213,-0.706253,-0.694006, 0.009887 },
{  0.502053,-0.497013, 0.148686,-0.233739,-0.235955, 0.013861,-0.022323,-0.142083, 0.843651,-0.476676,-0.292377, 0.176984,-0.284948, 0.050665,-0.124905, 0.240848,-0.493880, 0.409296, 0.926467,-0.510397 },
{  0.169684,-0.256350, 0.362249,-0.664151,-0.076108,-0.500216,-0.791418, 0.496955,-0.063164, 0.755690,-0.611754, 0.474212, 0.164669,-0.320287, 0.381678,-0.671759, 0.085447,-0.370553, 0.823283,-0.760805 },
{  0.190408,-0.005973,-0.058331, 0.180265, 0.091047,-0.099122, 0.127743, 0.180645,-0.182902, 0.217137, 0.047153, 0.088409, 0.148377,-0.296328, 0.137373, 0.134088, 0.098768,-0.328319,-0.265273,-0.204096 },
{  0.499633,-0.474981,-0.408730,-0.020107,-0.517499,-0.177688, 0.506873,-0.500880,-0.286555, 0.148863,-0.317991,-0.115597, 0.438144,-0.579957,-0.448492, 0.109323,-0.483241,-0.055489, 0.224093,-0.257544 },
{ -0.203163, 0.170775,-0.075342, 0.277695,-0.558268, 0.476575, 0.081968,-0.257888, 0.659550,-0.626293,-0.188566, 0.191199, 0.572326,-0.631611, 0.251914,-0.250290,-0.160953, 0.224541, 0.922695,-0.683716 },
{ -0.400586, 0.503234, 0.182473,-0.264488,-0.037277,-0.351513, 0.066960,-0.346882,-0.320969, 0.920469, 0.143382,-0.270379, 0.014391,-0.506769, 0.167528,-0.395997,-0.516613, 0.537390,-0.644570,-1.032196 },
{ -0.233466, 0.190218,-0.584164, 0.225969, 0.272969,-0.678365,-0.555998, 0.081859, 0.476166,-0.623084,-0.445721, 0.150560, 0.331459,-0.529601,-0.650838, 0.185897,-0.251146, 0.211546,-0.040445, 0.133780 },
{ -0.524605, 0.504971, 0.162739,-0.085848, 0.203362, 0.098822, 0.194175,-0.106976, 0.167607,-0.102783, 0.170335,-0.018733, 0.312632, 0.059172, 0.132955,-0.118442,-0.519114, 0.499889,-0.090325,-0.537111 },
{ -0.247400,-0.162971, 0.298096, 0.068858,-0.422834, 0.385199,-0.143140, 0.306257,-0.211847,-0.211840, 0.175788,-0.108641, 0.480958,-0.309562, 0.069653, 0.172219, 0.030438,-0.136206,-0.038681,-0.260056 },
{  0.057461,-0.163797, 0.141764,-0.163041,-0.309463,-0.002263, 0.076321,-0.348213,-0.210432, 0.377800, 0.019814,-0.179589,-0.354071, 0.081809,-0.220034,-0.212582,-0.146625,-0.316121,-0.451993, 0.274916 },
{  0.297761,-0.016548, 0.258515,-0.319042,-0.824066,-0.211172, 0.134323,-0.471096,-0.586575, 0.069434, 0.213258,-0.454392,-0.841654,-0.172455, 0.238867,-0.282343, 0.240012,-0.252726, 0.514730,-0.076562 },
{ -0.008456,-0.478571, 0.001068,-0.170034,-0.342244, 0.178259,-0.041298, 0.125522, 0.265634,-0.246981,-0.320034, 0.274787,-0.037550,-0.355003, 0.171494,-0.308514,-0.217231, 0.257599, 0.135220,-0.073406 },
{  0.110713, 0.380090,-0.196782, 0.171377,-0.356655,-0.183929, 0.372638,-0.273729,-0.276679,-0.139703,-0.496612,-0.426812, 0.145309, 0.168751,-0.074064, 0.160639,-0.195362,-0.198990, 0.135282,-0.129386 },
{ -0.219694,-0.264667,-0.067461,-0.087829, 0.054335, 0.275096, 0.014254, 0.048174,-0.170289,-0.242895, 0.164478, 0.264391,-0.060175,-0.100163, 0.048767,-0.170947,-0.051229,-0.427386,-0.037266, 0.126223 },
{ -0.247969, 0.367281, 0.407477,-0.086796,-0.457797,-0.394807,-0.306945, 0.322238, 0.743222, 0.388904,-0.604675,-0.274802,-0.208441, 0.242936, 0.354466,-0.125513,-0.457827,-0.498161, 0.330991,-0.333199 },
{ -0.128662,-0.028590,-0.423351, 0.136554, 0.259932, 0.424951,-0.025888,-0.059919,-0.362254, 0.182613,-0.292516, 0.306728, 0.066036,-0.428348, 0.251589,-0.275714, 0.474381,-0.211027,-0.309226,-0.098686 },
{ -0.179805, 0.430351,-0.175839, 0.231770,-0.343079, 0.348963, 0.186731,-0.312227,-0.064835,-0.550061, 0.248449, 0.000097, 0.120205,-0.472310, 0.258805,-0.476723, 0.069875, 0.051702,-0.023800,-0.410496 },
{ -0.477623,-0.117144, 0.295281,-0.130071,-0.356500,-0.128431,-0.048723,-0.205644,-0.331267,-0.158539,-0.393714,-0.080577, 0.195864,-0.459677,-0.490006, 0.005402, 0.064618,-0.201729, 0.476234, 0.142641 },
{ -0.072814,-0.323497,-0.301788,-0.028331, 0.052335,-0.600657, 0.342968,-0.309478, 0.131297, 0.351199, 0.299674,-0.328767,-0.059720, 0.277863,-0.231772, 0.380480,-0.165780, 0.433701, 0.332115,-0.425228 },
{  0.167771,-0.299498, 0.369030,-0.210383,-0.182042, 0.199098, 0.360813,-0.236598, 0.297983,-0.202733, 0.024648, 0.114572,-0.185599, 0.182588, 0.122674, 0.280507,-0.463914, 0.174073, 0.315870,-0.552021 },
{  0.000452, 0.125013, 0.456111,-0.713430,-0.335113, 0.145745,-0.281879, 0.379444, 0.008824,-0.240139,-0.376495, 0.536490, 0.194351, 0.291707, 0.370737,-0.859911,-0.114331, 0.273017, 0.085365,-0.105379 },
{  0.063834,-0.099247, 0.004866, 0.536527,-0.023102,-0.155695,-0.061912,-0.110165,-0.029444,-0.363231, 0.052279,-0.077037,-0.082399, 0.026192,-0.053321,-0.414195,-0.017397, 0.116685,-0.314045, 0.314530 },
{ -0.072500, 0.112270,-0.144623,-0.346338,-0.227870,-0.006024,-0.137756, 0.458566,-0.147776, 0.121753,-0.001584,-0.649200,-0.036192,-0.697975,-0.151830, 0.207311, 0.060894, 0.242453,-0.523306, 0.023628 },
{ -0.395480,-0.053503,-0.221583, 0.061245, 0.612361,-0.714089,-0.300083, 0.005128,-0.346457, 0.624663, 0.543387,-0.612804,-0.688239, 0.210313,-0.173392, 0.203970, 0.398159,-0.642279, 1.162013,-0.497815 },
{  0.063966,-0.176087, 0.002487,-0.021474, 0.107815, 0.024645, 0.162439, 0.051889,-0.258063, 0.083744,-0.069165,-0.266642, 0.194962,-0.087638, 0.130195, 0.208245,-0.149103,-0.189241,-0.096227,-0.203453 },
{  0.227098,-0.310796, 0.109878,-0.130493,-0.156568, 0.200097,-0.214028,-0.051590, 0.058666, 0.274052,-0.422060, 0.415758, 0.001807,-0.522707, 0.333532,-0.519517,-0.148824,-0.046798,-0.035156,-0.194528 },
{  0.511739,-0.182016, 0.382294,-0.213010,-0.264017, 0.213283, 0.489814,-0.520402,-0.502177,-0.535902,-0.259454, 0.239827, 0.036845, 0.198470,-0.391351,-0.160793,-0.459598, 0.169811, 0.611807,-0.276502 },
{  0.710120,-0.117292,-0.304920, 0.348648,-0.277426, 0.069000, 0.195317,-0.244586, 0.235020,-0.022482,-0.191104,-0.140011,-0.006027,-0.386657,-0.368424, 0.422933,-0.276545,-0.277548,-0.104938,-0.093059 },
{ -0.248699,-0.227935,-0.002269, 0.515373, 0.131683,-0.405048, 0.131501,-0.039310, 0.042428, 0.017867,-0.101433, 0.169933,-0.271383, 0.306541, 0.024885,-0.426924,-0.238788, 0.159080,-0.248612, 0.011887 },
{  0.294631,-0.024718,-0.010132, 0.116444, 0.343315, 0.103795, 0.241570,-0.350125, 0.133212,-0.117954, 0.234983,-0.080709,-0.224507,-0.226476,-0.421550, 0.186900,-0.292063, 0.188800, 0.193374,-0.135587 },
{ -0.528339, 0.203755,-0.382176, 0.341951,-0.397240, 0.466573, 0.873732,-0.393782, 0.565214,-0.949400, 0.822755,-0.524991,-0.625449, 0.119724,-0.596070, 0.184158,-0.385673, 0.089727,-0.620444,-0.567084 },
{ -0.487253, 0.448626,-0.414985, 0.219179, 0.803502,-0.500617,-0.244285, 0.411435,-0.781586, 0.641557, 0.954661,-0.514561,-0.508409, 0.415430,-0.416204, 0.339081, 0.676159,-0.605871,-1.312766,-0.120156 },
{  0.050605,-0.052355, 0.353818,-0.178164,-0.635498,-0.200105,-0.659232,-0.113638, 0.141660,-0.100008, 0.485907,-0.234752, 0.115383,-0.168201,-0.350478,-0.210410, 0.098495, 0.127540, 0.369340,-0.267277 },
{ -0.224755, 0.266308, 0.268034,-0.141473, 0.668014,-0.028155,-0.326808, 0.303395,-0.245345, 0.183502,-0.088326, 0.179987,-0.079023,-0.085657,-0.018596,-0.184681,-0.219396, 0.268384, 0.073877,-0.153160 },
{ -0.349697, 0.594541,-0.154761,-1.195887,-0.302784, 0.588911,-0.068629,-0.006554, 0.026360,-0.023247,-0.178413,-0.089224,-0.118703,-0.436564,-0.181749, 0.506350,-0.242141,-0.581604,-0.633723, 0.401593 },
{  0.148991, 0.524168,-0.161171, 0.147952,-0.023044,-0.618790,-0.020687,-0.674109,-0.175308, 0.124029, 0.090460, 0.664635,-0.270078,-0.021572,-0.002495,-0.317506,-0.048489,-0.024087,-0.588656,-0.045415 },
{  0.061482,-0.758073,-0.351750, 0.040349,-0.129381, 0.208409,-0.163875, 0.409976,-0.189602, 0.358746, 0.140384,-0.908738,-0.091188, 0.222481,-0.086259,-0.637706,-0.285967, 0.046800,-0.374139, 0.366755 },
{  0.029661,-0.329210, 0.178196,-0.113795,-0.268150, 0.002700,-0.012815, 0.124590,-0.157492,-0.182136, 0.343605,-0.032282,-0.299250, 0.315511, 0.215126, 0.309845, 0.364669, 0.181191, 0.013473,-0.287057 },
{  0.353799, 0.298818,-0.236667, 0.301592, 0.256183,-0.376928, 0.298133, 0.067971,-0.308605, 0.045418, 0.226745,-0.406659, 0.138485, 0.465399, 0.187025, 0.306442, 0.141841,-0.132003,-0.139671,-0.385672 },
{ -0.451378, 0.492169,-0.023221,-0.026739, 0.132092,-0.269810,-0.546694, 0.567471,-0.024602, 0.021816, 0.049264,-0.176481,-0.394033, 0.468348, 0.045400,-0.189938, 0.171696,-0.538101,-0.835454, 0.350230 },
{  0.434347,-0.311931, 0.510132,-0.219812, 0.326293,-0.415188,-0.279380, 0.129840,-0.561109,-0.029277,-0.295771,-0.156334,-0.266192, 0.561988,-0.175691, 0.373861,-0.243958, 0.503505,-0.384799,-0.454860 },
{ -0.292842,-0.782515,-0.132259, 0.197370, 0.016201,-0.131583,-0.225384, 0.135348,-0.248695, 0.729745,-0.021496,-0.015062,-0.072031, 0.054693, 0.258602, 0.076090,-0.042575,-0.408912,-0.395816,-0.108930 },
{  0.001567,-0.468004,-0.388628, 0.245739,-0.035746,-0.295947,-0.443761, 0.298476, 0.609904,-0.263005,-0.501825, 0.365954, 0.025118,-0.269229,-0.355910, 0.212155, 0.030353,-0.407213,-0.274219,-0.064268 },
{ -0.006186,-0.163181, 0.146117,-0.273606,-0.705537, 0.332686, 0.320260,-0.319498,-0.419658, 0.423578, 0.441820,-0.408475,-0.365823, 0.555654, 0.176288,-0.449126, 0.074542,-0.089384, 0.085055,-0.479622 },
{  0.035057, 0.081541,-0.147988,-0.124085, 0.125087,-0.262508,-0.220008,-0.168167, 0.004817, 0.227051, 0.355003,-0.086843, 0.078323,-0.382355,-0.244790, 0.237246,-0.364869,-0.214415,-0.504938, 0.139736 },
{ -0.604755,-0.131230, 0.127941,-0.209746, 0.094746,-0.090680,-0.034124,-0.346408,-0.270394, 0.489730,-0.004490,-0.288143, 0.124632,-0.117947, 0.142003,-0.057535,-0.371233,-0.001975, 0.053218, 0.019060 },
{  0.038248,-0.499117, 0.111352,-0.203201, 0.004186,-0.458917,-0.602696,-0.730517,-0.234686, 0.493913,-0.476016, 0.150873, 0.024695, 0.248758,-0.425870, 0.071268,-0.377613,-0.118743, 0.083202, 0.362791 },
{ -0.399586, 0.057627,-0.537720, 0.111975,-0.565326, 0.055800, 0.502831,-0.477914, 0.243189,-0.524353, 0.525676,-0.272830,-0.032894, 0.212586,-0.279212, 0.130818,-0.199762, 0.215735, 0.514288,-0.365376 },
{  0.209223,-0.101481, 0.270121,-0.030051, 0.235440, 0.033742, 0.046711, 0.218760,-0.149683, 0.238840, 0.102660, 0.113899,-0.111139,-0.037831,-0.178633, 0.161126,-0.101931, 0.135106,-0.368457,-0.282952 },
{ -0.046668,-0.074682,-0.170303,-0.059982,-0.152645,-0.001894, 0.232529,-0.106799,-0.202686,-0.195614, 0.120717,-0.150606,-0.170458,-0.220171, 0.049281,-0.039347, 0.026932, 0.160703,-0.072125,-0.038155 },
{ -0.209908, 0.615463, 0.112875,-0.326593,-0.135868,-0.048472, 0.158917,-0.663414,-0.105827,-0.063724,-0.048162, 0.361089,-0.062495, 0.382107,-0.237813, 0.155794, 0.237901,-0.476319,-0.242545,-0.351361 },
{  0.245496,-0.279794,-0.452322, 0.093940, 0.136303,-0.047947,-0.463114, 0.055854,-0.167069,-0.070600, 0.158931,-0.248337,-0.220813,-0.129032, 0.121981,-0.263235,-0.220287, 0.209938,-0.005213, 0.365137 },
{ -0.014613,-0.365263, 0.190874,-0.216413,-0.323552, 0.351654,-0.155066, 0.415671,-0.066406, 0.052823, 0.106776,-0.613332, 0.122431,-0.472908, 0.004887, 0.200698,-0.217940, 0.413453,-0.292761,-0.290043 },
{ -0.434359, 0.357957,-0.037517,-0.001617, 0.190886,-0.373435,-0.212360, 0.294904, 0.425225,-0.407802, 0.141046, 0.107145,-0.343528, 0.419525,-0.039539,-0.102063, 0.199858,-0.543418, 0.822110,-0.704447 },
{  0.117866,-0.081231,-0.380253,-0.220782, 0.103228, 0.132143, 0.246883,-0.051275,-0.280917,-0.256321, 0.188276, 0.329093, 0.172658, 0.001742,-0.315323,-0.240607, 0.150493,-0.351295,-0.352884,-0.064760 },
{ -0.092758,-0.714070, 0.004136, 0.316482,-0.378734, 0.187478, 0.139018, 0.121326, 0.168712,-0.372722,-0.218492, 0.035179,-0.011209, 0.066846,-0.278245, 0.147890, 0.103955,-0.216771,-0.351207,-0.151248 },
{  0.012424, 0.077037, 0.148090, 0.089893,-0.103049, 0.119988,-0.235720,-0.114883,-0.023992, 0.370032,-0.099834,-0.162373,-0.059983, 0.000682,-0.341294,-0.168740, 0.141627,-0.175418, 0.016600,-0.140408 },
{  0.007979,-0.107524, 0.310819,-0.063676,-0.218030,-0.153597, 0.152384,-0.038919, 0.363281,-0.038750,-0.012286,-0.051212,-0.167201,-0.013271, 0.164830, 0.318539,-0.109654,-0.061344, 0.307539,-0.533016 },
{  0.123971, 0.003099,-0.148179, 0.149812, 0.009036, 0.101608, 0.208634,-0.088516,-0.134859, 0.467770, 0.119933,-0.128487, 0.354789,-0.221100,-0.050644,-0.019427, 0.341167,-0.125199, 0.711311,-0.516016 },
{ -0.355631, 0.138353,-0.016714, 0.122123, 0.364121,-0.252203, 0.028565,-0.206464,-0.381460,-0.178656, 0.321143,-0.496862,-0.081854, 0.131069, 0.095937,-0.092241,-0.746220,-0.221504, 0.298150,-0.237146 },
{  0.275078,-0.358583,-0.354881, 0.123187,-0.454954, 0.019651, 0.389512,-0.237856,-0.158512, 0.405700,-0.181765, 0.077946, 0.273953,-0.275948,-0.225340, 0.023624,-0.135807, 0.015989, 0.707430,-0.193145 },
{  0.093017, 0.452911,-0.455741,-0.009200,-0.156460, 0.123760,-0.083433,-0.076026, 0.288801,-0.244916, 0.078257, 0.007790, 0.085167,-0.002675,-0.102245, 0.041120, 0.332719,-0.457808, 0.499563,-0.325866 },
{  0.306926,-0.305297,-0.089479, 0.126065,-0.335055,-0.127861,-0.080844, 0.390498,-0.201388,-0.007771,-0.023798,-0.214265,-0.354287,-0.100904, 0.199783,-0.094560,-0.164701,-0.011838,-0.167491, 0.231651 },
{  0.271236,-0.344013,-0.140344, 0.591723,-0.065769,-0.398312,-0.212012, 0.015133,-0.027060,-0.132516, 0.128068, 0.031678,-0.493622, 0.134805, 0.451992,-0.194840,-0.270077, 0.198065,-0.016045,-0.432458 },
{  0.009791,-0.351467,-0.284409,-0.197623,-0.113180,-0.005475,-0.037912, 0.206019, 0.132213,-0.490119, 0.387464,-0.010043,-0.092092, 0.178818,-0.258649,-0.217453,-0.361801, 0.241184, 0.178378,-0.059931 },
{  0.246476,-0.316562,-0.225019, 0.156968, 0.058355,-0.184517,-0.209674,-0.289641,-0.101941,-0.007287, 0.356040,-0.315557,-0.264173, 0.217298,-0.582125, 0.221419, 0.005810,-0.079939, 0.171831,-0.006179 },
{ -0.440488,-0.000692, 0.180423, 0.049364, 0.181729,-0.292770, 0.573916,-0.248331,-0.190761,-0.326885,-0.133532, 0.557419,-0.524317, 0.190841,-0.029015,-0.077061, 0.202202,-0.201005, 0.100265,-0.490942 },
{ -0.452582, 0.054905,-0.557122, 0.470773,-0.147981, 0.135964, 0.126115,-0.324768, 0.156741,-0.050925, 0.465860,-0.396727,-0.256025,-0.166863,-0.225092,-0.093567, 0.463998,-0.302503, 0.716799,-0.552241 },
{  0.396575,-0.038063, 0.132605,-0.217497, 0.282821,-0.214840,-0.172543, 0.109266,-0.096752, 0.335854,-0.099808, 0.057841,-0.212264, 0.192759, 0.219238,-0.099792, 0.033382, 0.145258,-0.242009,-0.392306 },
{ -0.269544, 0.321927,-0.300549, 0.253978,-0.356266, 0.367453, 0.138237,-0.093619, 0.069200, 0.076530, 0.035556,-0.160980,-0.113919,-0.110573,-0.065107, 0.239001,-0.035074,-0.256387,-0.283861,-0.309297 },
{  0.385354, 0.404891, 0.181980, 0.106411,-0.367792, 0.223859, 0.156154, 0.121974,-0.184724,-0.172806, 0.009223,-0.410148,-0.104559, 0.432350, 0.010017,-0.390765,-0.017188,-0.274861,-0.068236,-0.280650 },
{ -0.646672, 0.090457, 0.062185,-0.050611, 0.049793, 0.066160,-0.350326, 0.323229, 0.112005,-0.051576, 0.281234, 0.132752,-0.221601, 0.140093, 0.365538,-0.407031, 0.579502,-0.203926, 0.338270,-0.407075 },
{  0.256313, 0.003332, 0.341781,-0.168192, 0.298569,-0.065976,-0.228692,-0.274050,-0.345852,-0.680149,-0.118662,-0.415919,-0.353558, 0.186967,-0.092054, 0.518771,-0.594128, 0.152182, 0.436378,-0.418900 },
{ -0.217033, 0.110732, 0.185428,-0.005965,-0.253744,-0.634976,-0.172325,-0.724363, 0.013800, 0.187630,-0.506118, 0.198792,-0.193834, 0.089460, 0.191517, 0.153794,-0.012857,-0.400762,-0.226982, 0.445806 },
{ -0.270190, 0.249728,-0.025390, 0.177607,-0.209939,-0.296927,-0.164862, 0.301413,-0.147102,-0.374790,-0.298658, 0.180852,-0.302555,-0.601936, 0.123555,-0.198356, 0.057599, 0.082515,-0.239479,-0.073327 },
{ -0.163089,-0.106924,-0.215079,-0.127044, 0.027277, 0.115788,-0.101715, 0.122089,-0.039654,-0.089248,-0.216199,-0.073982,-0.222296,-0.105971,-0.113323, 0.114953,-0.154917,-0.153346, 0.170482,-0.092067 },
{ -0.219152,-0.045553, 0.199920, 0.027940,-0.137362,-0.197146,-0.211349, 0.194017,-0.081058,-0.000427, 0.044955,-0.275494, 0.161731,-0.239723,-0.212901, 0.166021,-0.185131, 0.098441,-0.008355, 0.113702 },
{  0.178739,-0.366620,-0.244211,-0.279277,-0.238860,-0.110655, 0.252844,-0.402359,-0.109023, 0.089487,-0.148833,-0.318913, 0.464212,-0.445258,-0.302887, 0.316519,-0.172705, 0.363309,-0.109041,-0.243795 },
{ -0.624963, 0.535306,-0.502209, 0.476034,-0.628547, 0.335026,-0.668108, 0.284816,-0.724810, 0.424610,-0.491952, 0.267526, 0.641683,-1.260076, 0.849561,-0.881118, 0.636670,-1.102856,-0.418928,-0.690695 },
{ -0.069051,-0.177609,-0.527612,-0.171567, 0.121141,-0.367294, 0.268245,-0.491012, 0.300430, 0.118643,-0.405047,-0.155829,-0.455045, 0.050307, 0.223313,-0.654045,-0.061527,-0.220101, 0.384736, 0.384165 },
{  0.041629,-0.411586,-0.287902,-0.203348, 0.150264,-0.307909, 0.306848, 0.107092, 0.315083,-0.474175, 0.149755,-0.348858,-0.399466, 0.113622,-0.555775, 0.133264,-0.058510, 0.397176, 0.663608,-0.266291 },
{ -0.036630, 0.442893,-0.324325, 0.234477, 0.080289, 0.437944, 0.079375,-0.286661, 0.145734, 0.112624, 0.201064,-0.164229,-0.108848,-0.491779,-0.233682,-0.054922,-0.175934,-0.357187,-0.012246,-0.418078 },
{  0.203756,-0.006325,-0.274530, 0.016780,-0.369702, 0.397431, 0.102075,-0.345662,-0.390535,-0.357642, 0.270001, 0.063832, 0.161683,-0.002153,-0.169372,-0.042910, 0.317405, 0.103598,-0.181072,-0.165622 },
{ -0.199103, 0.300674, 0.337629,-0.279111, 0.267845,-0.095679,-0.358254, 0.091951,-0.046817,-0.034865, 0.253874,-0.177744,-0.451726, 0.203998,-0.120479, 0.134508,-0.071827,-0.047437, 0.652553,-0.324052 },
{ -0.261407,-0.046852,-0.125554, 0.109781,-0.243906, 0.128715,-0.128146,-0.339463, 0.033064,-0.258217,-0.135848, 0.304884, 0.172907,-0.028742, 0.065290, 0.375155, 0.262643,-0.582527,-0.668342, 0.039943 },
{ -0.330361, 0.169184,-0.226273, 0.187111,-0.075674,-0.637984, 0.089545, 0.016864,-0.080033, 0.070803, 0.073402,-0.220476, 0.148378,-0.323894,-0.126720, 0.272552, 0.188424,-0.134084, 0.041406, 0.123346 },
{ -0.124737,-0.067443, 0.257148,-0.205007, 0.446238,-0.488998,-0.151876, 0.005838, 0.262653,-0.462576, 0.346355,-0.236442,-0.293755, 0.416308,-0.220996, 0.116655,-0.243342, 0.219361, 0.634881,-0.314054 },
{  0.374432, 0.187171, 0.164079, 0.007227,-0.231659, 0.053167,-0.023204, 0.156445, 0.323672,-0.089889,-0.161761, 0.226166,-0.065200, 0.203074, 0.265458, 0.180016, 0.091372, 0.119057,-0.456371,-0.529449 },
{  0.219760,-0.127390,-0.108252, 0.132164, 0.197344,-0.173194,-0.111950, 0.089279,-0.673833, 0.392024,-0.086042, 0.030102, 0.524776,-0.533621,-0.072441, 0.253075, 0.246678,-0.387900, 0.949643,-0.665702 },
{ -0.663094, 0.253573,-0.426182, 0.689121,-0.473923, 0.537610,-0.056569,-0.572013,-0.345760,-0.824537,-0.001730,-0.343376, 0.340509,-0.275765, 0.291755,-0.324406, 0.090451,-0.442517, 0.447346,-0.442563 },
{ -0.246238, 0.112153, 0.070426,-0.058024,-0.336480,-0.256345, 0.102621,-0.108538,-0.114681,-0.311108,-0.084496,-0.295256,-0.139040,-0.151937, 0.080288, 0.017677, 0.067307,-0.397389, 0.266059, 0.372274 },
{  0.428242,-0.394827,-0.228295, 0.133361,-0.435866, 0.405469, 0.555330,-0.458364,-0.669256, 0.962557,-0.128423, 0.555772, 0.453188,-0.373971,-0.154164, 0.131523,-0.160101, 0.405194,-1.472449,-0.013863 },
{  0.381443,-0.117160,-0.172832, 0.202676,-0.377950, 0.009988, 0.233644, 0.388198,-0.166128,-0.427366,-0.116204,-0.050842, 0.405972, 0.180088,-0.210080, 0.272064,-0.266520, 0.157267,-0.440273,-0.034108 },
{  0.207671, 0.223390, 0.161399,-0.030386, 0.174601, 0.112187,-0.002921,-0.246030,-0.159056,-0.170253, 0.156295,-0.421307,-0.067212, 0.165158,-0.182881, 0.010481, 0.050671, 0.111851, 0.221261,-0.314500 },
{  0.086838, 0.276539, 0.057781,-0.281025,-0.000542,-0.221976,-0.098198, 0.092538,-0.202626,-0.019114,-0.133534, 0.141308,-0.024964,-0.311237,-0.027095,-0.295199,-0.206432, 0.139301, 0.144061, 0.017286 },
{  0.423712,-0.079809,-0.065316,-0.250564,-0.038810, 0.303015,-0.155393, 0.265284,-0.029098, 0.008600, 0.151461,-0.115117,-0.428649, 0.422962, 0.227843,-0.376721, 0.517626,-0.525921, 0.101791,-0.587128 },
{  0.114464,-0.011130, 0.045427,-0.127599, 0.103051,-0.070107, 0.206565, 0.210095,-0.218522, 0.394028,-0.247988, 0.301973,-0.157022, 0.089972,-0.227697,-0.153112, 0.011658,-0.382825,-0.367154,-0.274652 },
{  0.187997,-0.422982,-0.241382,-0.070896,-0.262108,-0.137002,-0.612508,-0.073141,-0.065111,-0.174081, 0.125252,-0.165263, 0.291442,-0.282526, 0.076299,-0.148487,-0.392599,-0.194553, 0.514105,-0.076747 },
{ -0.198311,-0.161188,-0.267394, 0.117235, 0.064988,-0.105352,-0.122594,-0.249257,-0.136209, 0.300514, 0.120120,-0.246739,-0.213338,-0.178136,-0.235542, 0.224295, 0.360150, 0.065515, 0.255072,-0.158365 },
{ -0.196546, 0.528229,-0.252815, 0.050621,-0.294532,-0.028905,-0.225119, 0.191558, 0.455073,-0.510632, 0.111294,-0.355934,-0.380364,-0.219639, 0.205341,-0.362604, 0.453282,-0.418444, 0.734508,-0.203555 },
{  0.249976,-0.561448,-0.303087, 0.168784,-0.379066, 0.286824,-0.073043, 0.149620, 0.238058,-0.293346,-0.253086,-0.490972, 0.024182, 0.138749,-0.143625,-0.222813,-0.226102,-0.269898,-0.628401,-0.034836 },
{  0.175954,-0.352963, 0.086817,-0.187531, 0.509370,-0.110651,-0.305437, 0.094021,-0.077788,-0.610270,-0.662285, 0.152126,-0.222111,-0.217787,-0.097865,-0.148321, 0.620182,-0.141603, 0.248213, 0.055070 },
{  0.013110,-0.008836, 0.065838, 0.263112,-0.033623,-0.238619,-0.063354,-0.300084,-0.126686,-0.431949, 0.233575, 0.043704,-0.186404,-0.557805, 0.122765, 0.407549,-0.065934, 0.175942,-0.111381,-0.058122 },
{ -0.700197, 0.281620, 0.011889,-0.479465, 0.271171,-0.223736, 0.102738,-0.404757,-0.499038, 0.605664, 0.457230,-0.369082,-0.092686,-0.146310, 0.230165,-0.211386,-1.017591, 0.278707,-0.032591,-0.243178 },
{  0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
{  0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
{  0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
{  0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
{  0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
{  0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
};
static double savedWeightTensor_2[layer2_neuronNum][layer1_neuronNum + 1] =
{
{  0.036998,-0.499405, 0.197080, 0.051965,-0.226805,-0.397294,-0.770825, 0.204236, 0.155186, 0.009703, 0.137451, 0.247946,-0.254762, 0.326198, 0.200899,-0.064377,-0.488471,-0.560014, 0.404942, 0.669504,-0.113976, 0.666230, 0.560943, 0.429337, 0.161477, 0.084862,-0.161258,-0.007223,-0.584424,-0.219313,-0.219917,-0.037011, 0.367040, 0.028922, 0.063867,-0.475993, 0.253098, 0.250307,-0.271813,-0.145995,-0.469968,-0.045119,-0.022996, 0.164775, 0.307230,-0.058520,-0.105153,-0.008030, 0.230223, 0.350890,-0.373525, 0.359983,-0.348265,-0.600403,-0.421363, 0.228612,-0.141003,-0.203689, 0.509307,-0.052888, 0.369344, 0.173578,-0.416402,-0.487238,-0.150150,-0.187436, 0.058624,-0.309930,-0.478026,-0.183069,-0.287338, 0.645462,-0.357311,-0.144093,-0.209759, 0.210087, 0.323217,-0.234315, 0.099467, 0.424460,-0.164891,-0.107733, 0.082593,-0.061100,-0.004753, 0.423888, 0.043782,-0.101114, 0.061720, 0.457376, 0.267278,-0.103265,-0.212535, 0.053176,-0.176556, 0.265254, 0.327185,-0.069546, 0.279868, 0.211037, 0.125670, 0.444070,-0.343450,-0.014587, 0.578520, 0.149576, 0.155394, 0.365513,-0.174704, 0.097253,-0.442947, 0.314435,-0.079228, 0.202581, 0.071628,-0.365405, 0.019259, 0.507119,-0.311914, 0.065128,-0.404117,-0.437626,-0.054203, 0.170372, 0.167021, 0.177561, 0.029509, 0.147423,-0.694804 },
{ -0.033341,-0.116126,-0.198186, 0.113263, 0.401041,-0.130001,-0.155805,-0.368902,-0.248904,-0.130393, 0.083091, 0.131351, 0.340290,-0.177725, 0.010787, 0.161331, 0.016749, 0.331508,-0.409892,-0.356682,-0.171515, 0.046358, 0.130589,-0.060181,-0.395925,-0.290635, 0.244680,-0.041350,-0.066507,-0.192327, 0.194605, 0.247221, 0.151716, 0.051902,-0.069755, 0.024522,-0.316804,-0.342611,-0.064406,-0.278578,-0.213607, 0.370940, 0.060223, 0.059558,-0.406862, 0.086167,-0.005946,-0.102545,-0.549137,-1.073643, 0.041686, 0.300206, 0.118957, 0.006621, 0.095027, 0.001627,-0.379017, 0.467790, 0.176306, 0.114361,-0.008107,-0.211235,-0.252697,-0.012445, 0.043897, 0.180013, 0.184919,-0.160246,-0.088408,-0.035865,-0.139662, 0.329093, 0.056923, 0.346813,-0.122716, 0.057214,-0.293000,-0.061519, 0.204468, 0.093908,-0.108613,-0.188733, 0.111122,-0.307992,-0.059473, 0.137147,-0.047488,-0.166085,-0.224230, 0.478220, 0.210341, 0.013557, 0.240426, 0.038166,-0.009757, 0.165557,-0.118509, 0.036104,-0.300708, 0.044059, 0.233524, 0.132952, 0.260731,-0.371768, 0.356274,-0.282914,-0.513322, 0.596051,-0.183318, 0.688200,-0.070764,-0.134722,-0.192373,-0.098800, 0.300163, 0.098914,-0.116467, 0.294163, 0.081209,-0.264867,-0.146428,-0.191161,-0.198891,-0.167295, 0.123015,-0.079059, 0.192462, 0.061243,-0.222827 },
{ -0.038287,-0.019387,-0.018173,-0.062113, 0.158110,-0.323472,-0.136577, 0.400566, 0.155086, 0.047078, 0.122159, 0.358165, 0.096421,-0.042552,-0.058335, 0.154068,-0.004933, 0.203790,-0.011642,-0.047873, 0.087598, 0.168293,-0.287622,-0.084672, 0.310762, 0.138907, 0.011735,-0.244375,-0.347504,-0.091953, 0.150150, 0.055754, 0.212327, 0.031599, 0.021511, 0.058197, 0.303785,-0.393467, 0.234050, 0.128057, 0.148430, 0.029272, 0.231719,-0.085985,-0.385448, 0.316280, 0.035027, 0.291750, 0.016191,-0.291314,-0.160391, 0.071725, 0.154040,-0.051224,-0.079371,-0.156495, 0.101331, 0.192505, 0.286037,-0.196926, 0.465465, 0.001378,-0.188536,-0.325875,-0.120497, 0.333541,-0.089657,-0.026732,-0.208406, 0.180684,-0.312655,-0.209820,-0.222236, 0.150314, 0.031746,-0.040917, 0.144245,-0.037803, 0.018614, 0.140610,-0.054327,-0.193691,-0.226744, 0.393571, 0.032760, 0.095634, 0.109832, 0.203629, 0.285856,-0.186017,-0.098502, 0.066167,-0.192297, 0.095792,-0.036897, 0.263857, 0.352461,-0.094873, 0.235219, 0.106564,-0.028928,-0.189770, 0.088180, 0.072642,-0.128428, 0.056819, 0.223846,-0.348499,-0.154668,-0.020070, 0.169590,-0.038764,-0.238840, 0.069851, 0.000585,-0.208864, 0.062062,-0.041142,-0.013349, 0.110899,-0.130299,-0.154879,-0.056621,-0.182084, 0.168566,-0.052820, 0.146364,-0.033247,-0.126176 },
{ -0.289908,-0.233552, 0.057505, 0.241938,-0.174277,-0.277787, 0.427333,-0.261842,-0.370178,-0.320421,-0.172094,-0.803894, 0.215768, 0.095602, 0.107363, 0.015609,-0.154607,-0.129657, 0.422990,-0.253924,-0.226067,-0.043083, 0.366319, 0.754268,-0.321038, 0.143125,-0.012993, 0.507118,-0.004036, 0.370897,-0.128235,-0.215521, 0.524925,-0.028340,-0.256267,-0.189020,-0.062415, 0.269940, 0.260779,-0.277048,-0.210173,-0.953326,-0.106682, 0.088783,-0.407967,-0.566176,-0.295419,-0.335718,-0.197171, 0.515281, 0.013628, 0.072630,-0.246958,-0.109710,-0.141115,-0.145298, 0.147057, 0.341922,-0.355779, 0.209250,-0.306587, 0.360081,-0.298041, 0.324733, 0.047260,-0.067892,-0.085915, 0.195972,-0.060737,-0.122778,-0.076206, 0.532112, 0.131688, 0.084072, 0.094411, 0.413493,-0.440663, 0.103425,-0.698340,-0.266439, 0.000663,-0.324853,-0.122142,-0.277437,-0.239303,-0.438592, 0.141662,-0.155974,-0.075217, 0.069706,-0.185945,-0.141134,-0.219484,-0.146968,-0.002179,-0.406650,-0.667021,-0.272622,-0.417427,-0.027776, 0.127567, 0.169857,-0.504275,-0.295583, 0.062427,-0.002248,-0.475129, 0.045128,-0.063666, 0.892132,-0.195133,-0.166408,-0.091989, 0.104561,-0.019760,-0.136228,-0.101350, 0.039043, 0.037458,-0.038500, 0.181344, 0.497465,-0.042442,-0.088790,-0.046217,-0.001090,-0.100975,-0.140844,-0.807705 },
{  0.242044, 0.078534, 0.000221, 0.281855, 0.142183,-0.042154, 0.175488, 0.105511, 0.010125, 0.125957,-0.235970,-0.402330, 0.149772, 0.103674, 0.002620, 0.096329,-0.036361,-0.097664,-0.039124,-0.248952,-0.227539, 0.115101,-0.330371,-0.182793,-0.128583,-0.079819,-0.303362, 0.058115, 0.134502, 0.169769, 0.023870, 0.017816,-0.220034,-0.178402,-0.026979, 0.060983, 0.188664,-0.078345,-0.182120, 0.143230,-0.108373, 0.023789, 0.069612,-0.156085,-0.006043,-0.087057, 0.096001, 0.165791,-0.336161,-0.400602,-0.058593,-0.024871,-0.024948, 0.229942, 0.126454,-0.397990, 0.347711, 0.021241,-0.126836, 0.195907,-0.088109, 0.006761, 0.070896, 0.073569,-0.029750,-0.186249,-0.215764,-0.028727, 0.263682, 0.290087, 0.036684,-0.070319, 0.139077, 0.023171,-0.064338,-0.250069,-0.091820, 0.043665, 0.073811,-0.113602,-0.072258, 0.337028, 0.066812,-0.034291, 0.426802,-0.115508, 0.295619,-0.100989,-0.014672, 0.104131, 0.232226, 0.429729,-0.072992,-0.132855, 0.109176, 0.031156, 0.065712, 0.362310, 0.082643, 0.090027,-0.319805,-0.189242,-0.113980, 0.253899, 0.037544,-0.024643,-0.021074,-0.005863, 0.251887,-0.186763,-0.325872,-0.195844, 0.082005,-0.359599, 0.161367, 0.075901,-0.133841,-0.405285, 0.100641, 0.137863,-0.028694, 0.067250,-0.079259,-0.062028, 0.033521, 0.165401,-0.187927,-0.086759,-0.028915 },
{  0.038833, 0.028645,-0.347268,-0.190477,-0.043206, 0.112578, 0.041595,-0.199298, 0.080439,-0.252597, 0.186554,-0.409814, 0.182650,-0.188664, 0.010318,-0.010562, 0.073254,-0.221260, 0.637391,-0.269442,-0.066955,-0.262602, 0.478630, 0.167794,-0.359814,-0.398869, 0.077721, 0.208168, 0.105066, 0.369755,-0.178189, 0.241770,-0.403416, 0.218261, 0.163512,-0.080074, 0.139381, 0.339492, 0.222680,-0.084013,-0.098035, 0.235566,-0.220756, 0.610419, 0.534064,-0.385810,-0.257538, 0.062943,-0.768747, 0.215168,-0.029995,-0.503082, 0.151796,-0.117892,-0.006830,-0.431053, 0.193952,-0.087259,-0.140782,-0.123356,-0.202713,-0.047638, 0.036644, 0.010759,-0.406583,-0.454200,-0.208209,-0.121468, 0.099856,-0.182166,-0.291679, 0.010034,-0.107314,-0.115009,-0.168014, 0.049426,-0.229627, 0.276945, 0.254785,-0.264112, 0.075575, 0.105246, 0.019170, 0.356929,-0.145263,-0.444710,-0.304251,-0.114409,-0.260336,-0.349995, 0.446980,-0.054691,-0.017726,-0.104880,-0.316611, 0.020530, 0.301491, 0.003411, 0.241998, 0.099924,-0.162964, 0.081397, 0.041229,-0.326282, 0.317876,-0.256841,-0.286341, 0.067846,-0.097834,-0.498684,-0.262860, 0.220724,-0.292192,-0.744006, 0.020788, 0.080925, 0.085536,-0.393444, 0.151850,-0.407540,-0.024911, 0.225919, 0.033696,-0.151684,-0.069752,-0.146551,-0.132360,-0.194792,-0.477546 },
{ -0.065748, 0.659280, 0.179025, 0.185202,-0.032419, 0.196159,-0.133299,-0.641704, 0.395708,-0.309343,-0.396976, 0.968757,-0.111390, 0.008996, 0.315309, 0.006862, 0.464642, 0.571063,-0.323112,-0.927512, 0.002412, 0.453574,-0.605067,-0.359281, 0.698074, 0.214012, 0.326218,-0.125708,-0.188133,-0.112789,-0.175318,-0.027130,-0.095000, 0.160542,-0.400049,-0.013569,-0.651144,-0.337979,-0.107574, 0.151536, 0.360962, 0.055535, 0.017811,-0.256781,-0.595877, 0.028584, 0.126309,-0.075753, 0.833934, 0.372902, 0.067142,-0.073279, 0.294979, 0.516030, 0.604794,-0.005821,-0.248976, 0.484704, 0.022021, 0.015419, 0.544512,-0.591343, 0.171560,-0.287386, 0.650152, 0.457481,-0.064264, 0.149612, 0.539601, 0.045105, 0.428593,-0.213058, 0.173545, 0.394464,-0.031427, 0.026904,-0.616574, 0.230301,-0.065742,-0.103007, 0.197347, 0.319428, 0.037785,-0.381134, 0.207658,-0.486779, 0.079094,-0.365920,-0.084982, 0.041267,-0.700585, 0.321589, 0.382359,-0.100468, 0.191483, 0.444677, 1.189327, 0.123586,-0.310786,-0.379661, 0.228107,-0.212078, 0.172705, 0.081764,-0.349882, 0.100830,-0.733573,-0.837053,-0.043470, 0.035830, 0.285905,-0.145385,-0.169730,-0.141546,-0.045450, 0.013834,-0.363083,-0.304991, 0.601079, 0.299609, 0.332088,-0.423029,-0.142078,-0.009076, 0.040723,-0.041483, 0.049618,-0.099380, 0.521430 },
{ -0.174867,-0.450300, 0.384637, 0.233352,-0.471197,-0.064833, 0.278652,-0.276441,-0.385654,-0.203586,-0.122501,-0.501687,-0.048293,-0.056694, 0.155887, 0.332624,-0.156361,-0.063908, 0.052033, 0.191044,-0.285528,-0.188412, 0.113208,-0.026133,-0.286710, 0.450303,-0.292240, 0.046211, 0.372497, 0.057947, 0.274602,-0.041927, 0.333691,-0.315699, 0.272511,-0.090505, 0.166888, 0.121307, 0.446017, 0.015191,-0.194122, 0.352373, 0.008482, 0.055731, 0.224533,-0.054944,-0.179986, 0.009406, 0.001835,-0.611061,-0.365619, 0.269617, 0.051008,-0.214579,-0.207405,-0.035095,-0.071631, 0.045998,-0.352186,-0.289146, 0.030552, 0.404381,-0.099946, 0.246659,-0.227538, 0.141535,-0.260747, 0.138678,-0.201045,-0.172463,-0.235633, 0.177535,-0.086717, 0.053395, 0.127384,-0.279175, 0.095258,-0.088359, 0.467195,-0.152631,-0.045109,-0.324463,-0.028909,-0.165510,-0.337723, 0.202392,-0.317627,-0.053361, 0.070681, 0.149741,-0.088502,-0.014284, 0.208264, 0.012134,-0.046250, 0.154706,-0.368132,-0.111588,-0.243769, 0.064512,-0.412806, 0.247090, 0.118620,-0.071744,-0.370667, 0.298441, 0.058687, 0.095603,-0.133464,-0.431182, 0.210086,-0.141501, 0.284310, 0.350192,-0.264985,-0.010741,-0.248434, 0.007341, 0.090656,-0.132288,-0.244769, 0.614712,-0.079944, 0.023031, 0.013624,-0.096241, 0.203240, 0.115776,-0.031188 },
{ -0.141435,-0.274986,-0.109043,-0.286887, 0.236322,-0.163293, 0.369298, 0.040364,-0.132089, 0.291760, 0.091251,-0.316490, 0.325253,-0.236836,-0.591669,-0.189642, 0.190614, 0.143102,-0.307448, 0.274675,-0.133001,-0.499394,-0.034231,-0.424222,-0.357504, 0.154740, 0.040892, 0.015955, 0.353975, 0.391579, 0.244161, 0.232158,-0.408693,-0.210991,-0.174377, 0.297681, 0.162960,-0.023986, 0.581736,-0.230175,-0.138122, 0.086735, 0.168073, 0.287211, 0.065191, 0.049172,-0.364809,-0.189691,-0.046609,-0.590408, 0.290952,-0.030091, 0.064003,-0.068093,-0.211115, 0.137324, 0.221049,-0.002439,-0.422708,-0.342803,-0.274749, 0.381243, 0.049085, 0.198575,-0.059038, 0.039295,-0.219650,-0.099686,-0.074087,-0.064354, 0.056123,-0.440045,-0.108547, 0.013753, 0.201635,-0.140666, 0.264839, 0.494990, 0.223833, 0.031975,-0.212903,-0.164658, 0.042698, 0.255969,-0.249347, 0.067363,-0.087948,-0.182731, 0.233332,-0.368717,-0.117837,-0.506711, 0.050130, 0.144491,-0.049845,-0.408896,-0.580483,-0.052453,-0.115111, 0.075983, 0.143691,-0.138038, 0.153526,-0.033625,-0.142820,-0.314990, 0.363397, 0.121772, 0.068396,-0.563658,-0.239498, 0.271645, 0.138585, 0.291042,-0.096642, 0.344372, 0.289124,-0.551866, 0.158464,-0.338133, 0.178101, 0.635138,-0.142215,-0.139274,-0.115639,-0.013836, 0.189397, 0.076555,-0.063255 },
{ -0.132095,-0.030177,-0.585670, 0.001203, 0.430824,-0.041420,-0.067957,-0.378608, 0.171761,-0.303015,-0.394098,-0.271479, 0.193338,-0.254532,-0.063063, 0.377021,-0.090149,-0.158460,-0.000044,-0.249590, 0.123536,-0.008844,-0.562750,-0.090298,-0.104909,-0.136672,-0.109805,-0.127109, 0.201974,-0.245649,-0.046199, 0.182930, 0.310805, 0.373306, 0.080177,-0.094021, 0.338484, 0.234501,-0.513264, 0.106697, 0.045204,-0.031262,-0.013661, 0.235057,-0.218586, 0.407954,-0.109719, 0.220942,-0.479358,-0.855569, 0.119235, 0.134765,-0.261739,-0.018362,-0.113500,-0.042614,-0.455721, 0.204420,-0.277194,-0.160528,-0.020132, 0.172094,-0.131814, 0.172034,-0.154815,-0.337769,-0.142639, 0.110292,-0.084970, 0.018309,-0.020112, 0.490503, 0.051031, 0.239679,-0.198453, 0.196319,-0.070570, 0.182250,-0.041039,-0.224961,-0.210410,-0.037371, 0.245653,-0.235878, 0.163082,-0.125525,-0.355477, 0.095688,-0.095431, 0.497976, 0.411485,-0.050444,-0.150856,-0.219657, 0.013896, 0.460861, 0.643868,-0.171611, 0.354580,-0.258373, 0.095682, 0.528741, 0.019672,-0.124895, 0.616564,-0.429867,-0.426740,-0.110954, 0.127358, 1.051228, 0.004915, 0.254307,-0.105178, 0.081121,-0.011323,-0.381901,-0.099897, 0.191701, 0.309993,-0.230191, 0.297304, 0.021630, 0.144096, 0.099854, 0.148868,-0.047002, 0.158237, 0.030805,-0.413888 },
{  0.085595,-0.303348,-0.273451, 0.391838,-0.422551,-0.432561, 0.164981,-0.263548,-0.100267,-0.349521, 0.144458,-0.228274, 0.048094, 0.290656, 0.128676, 0.531283,-0.319550, 0.005737,-0.195950, 0.383582, 0.063891,-0.104938, 0.054491,-0.039051,-0.330979,-0.029921, 0.120431,-0.153083, 0.018198,-0.136522, 0.247618,-0.111975, 0.342064, 0.108072, 0.155734,-0.013995,-0.177748,-0.113962,-0.081201, 0.223902, 0.047441,-0.759633, 0.007074, 0.324916,-0.259850,-0.079651,-0.158151,-0.351424, 0.146870, 0.164438,-0.158933, 0.360613,-0.202150,-0.009423,-0.039243,-0.066356,-0.187519, 0.701296,-0.282325, 0.009718,-0.257700,-0.022485,-0.205416,-0.047090,-0.159452,-0.205960,-0.095243,-0.146293, 0.160332, 0.166941, 0.403448, 0.035330, 0.122312,-0.102714,-0.002212, 0.113161,-0.273389, 0.110222,-0.295632, 0.224188,-0.181505,-0.092478, 0.303673, 0.018027,-0.213824,-0.066342, 0.166364, 0.326527, 0.196058, 0.251382,-0.076191, 0.352988,-0.305231,-0.106230,-0.018544,-0.129877,-0.296552,-0.014682, 0.083646, 0.291591, 0.069264,-0.287357, 0.271704,-0.453252,-0.103338, 0.194899,-0.105877, 0.397857, 0.069020, 0.425305, 0.208953,-0.188840, 0.101599, 0.135067, 0.243202,-0.093128,-0.345169,-0.010446,-0.049726,-0.330785,-0.049334, 0.052679,-0.157838,-0.042255,-0.025684,-0.163246, 0.160305,-0.097449,-0.366088 },
{ -0.297921,-0.085276,-0.011493, 0.000073, 0.579699, 0.169015, 0.006216,-0.213611,-0.128074,-0.050798, 0.577554,-0.418464, 0.060946,-0.062941,-0.070859, 0.478854,-0.203806,-0.332451,-0.066501,-0.142734, 0.165640, 0.414213,-0.033972,-0.078138,-0.295374,-0.063271, 0.295667, 0.060027,-0.142254, 0.062750, 0.223906, 0.232809,-0.108907, 0.407143, 0.425578, 0.312439, 0.147969,-0.279252, 0.128603, 0.133265,-0.418300,-0.656916, 0.276210,-0.093042, 0.458765, 0.363725, 0.118856, 0.181113,-0.035701, 0.211473,-0.410673,-0.043636,-0.235142,-0.160311,-0.149098,-0.379391, 0.031072,-0.237561,-0.155196, 0.687633,-0.197734, 0.069779, 0.120611,-0.158922,-0.275239,-0.339118, 0.058287, 0.043658, 0.106589, 0.040238,-0.020684,-0.191209,-0.048669,-0.166579,-0.363174,-0.136887, 0.103854,-0.245337, 0.228113,-0.147344,-0.177020, 0.149458, 0.141609,-0.000339,-0.195302,-0.648211, 0.051711, 0.156900,-0.006903, 0.578364,-0.036167,-0.055854, 0.038854, 0.109995,-0.038347, 0.030519, 0.732777,-0.322235, 0.257199, 0.160500, 0.571886,-0.338579, 0.330715,-0.013013,-0.238490,-0.150188, 0.150433, 0.365901,-0.134224, 0.430078, 0.422686,-0.147060, 0.051337,-0.080716, 0.356950,-0.226312,-0.363406, 0.295579,-0.215659,-0.030088,-0.043331, 0.147724,-0.096029, 0.004566,-0.141542, 0.191590,-0.148818, 0.110519,-0.370716 },
{  0.196228, 0.019702,-0.108664,-0.081905, 0.084811, 0.120541, 0.161564,-0.248217,-0.190868, 0.050079, 0.167703, 0.046635,-0.237902,-0.106441,-0.368322,-0.396526,-0.079725,-0.121353,-0.274940,-0.263714,-0.148685, 0.172797, 0.525502, 0.048252,-0.192627,-0.288942,-0.104481,-0.018476, 0.145920, 0.048796, 0.327972,-0.133252,-0.274521,-0.365461, 0.336060,-0.101039,-0.051349,-0.269123,-0.369939,-0.050224,-0.115732,-0.314288,-0.188884,-0.270929, 0.122695,-0.420095,-0.090726,-0.557327,-0.761493, 0.263497, 0.253849,-0.501029, 0.067648, 0.067589,-0.231113, 0.100008,-0.008531, 0.166969,-0.116681, 0.212204,-0.375217, 0.306914, 0.037983,-0.207582, 0.025256, 0.141203,-0.080338, 0.006691, 0.187229,-0.228025, 0.090044, 0.094383,-0.108233, 0.051917,-0.038803,-0.215134, 0.171822,-0.379471, 0.147334, 0.307136,-0.268216, 0.022780,-0.269493, 0.014962,-0.118466, 0.406190,-0.138514, 0.016055,-0.061792, 0.021587, 0.081375, 0.231263, 0.157535, 0.061856,-0.170070,-0.051084,-0.516647,-0.073857,-0.702417,-0.118411, 0.050827,-0.272159,-0.196745, 0.174054,-0.239922,-0.158469,-0.305505, 0.721084, 0.233197,-0.080519,-0.245517,-0.063471,-0.061182,-0.160945, 0.163298,-0.073382, 0.063026, 0.488472, 0.023473,-0.523886, 0.008633,-0.129624, 0.203215, 0.153191,-0.073091,-0.065030, 0.178209, 0.002349,-0.398158 },
{  0.071890,-0.001845,-0.133900,-0.215074,-0.389395, 0.032913, 0.179396, 0.187719, 0.072034, 0.121270, 0.010912, 0.624436,-0.361274, 0.032157,-0.014470,-0.205355,-0.259262, 0.234524, 0.325066,-0.127553, 0.078965,-0.048775, 0.003621, 0.147820, 0.159704, 0.307639,-0.197802, 0.179128,-0.486023,-0.208674,-0.029757,-0.168271,-0.335968,-0.453223,-0.101010,-0.379272,-0.036626,-0.045777,-0.441430, 0.049784,-0.111270, 0.369943,-0.107709,-0.104190, 0.223732, 0.281727, 0.083291, 0.174108, 0.480561, 0.470800,-0.384632, 0.194016,-0.076659,-0.201794,-0.133834, 0.024093, 0.139517,-0.192968,-0.017651, 0.098490, 0.052197,-0.044606, 0.043974,-0.138109, 0.205909, 0.254213, 0.090096,-0.073938,-0.139552,-0.265998, 0.029515,-0.063471,-0.087360, 0.119681,-0.052572, 0.047993,-0.355861,-0.141426,-0.429742, 0.215232, 0.095707,-0.179894,-0.222634, 0.291042,-0.001185, 0.082481, 0.138596, 0.197227, 0.271224,-0.295532, 0.069441,-0.118308, 0.115332,-0.146650, 0.139189,-0.150166,-0.188427,-0.112927,-0.032664, 0.017127,-0.178096, 0.025983, 0.139252,-0.037019, 0.078461, 0.051215,-0.160825,-0.098036,-0.201459,-0.197164,-0.059189,-0.030511,-0.063087, 0.299050, 0.135036, 0.008784, 0.203107, 0.038584, 0.238423, 0.350005, 0.024197,-0.491244,-0.165762,-0.014970,-0.069329,-0.089425, 0.141480,-0.130354,-0.018732 },
{  0.030048, 0.044091,-0.313110,-0.133928,-0.041722, 0.110550,-0.122125, 0.455133,-0.143127,-0.184440, 0.086699,-0.778244, 0.242121,-0.181680,-0.313410,-0.007676, 0.179265, 0.135487,-0.533921, 0.857204, 0.188220, 0.011892,-0.307780,-0.079674,-0.271316,-0.330210,-0.080474, 0.044015, 0.128229,-0.158192, 0.179493,-0.050973, 0.086195,-0.059571,-0.074000, 0.081636, 0.019315,-0.087082,-0.048731,-0.224930, 0.184150,-0.057498, 0.065972,-0.178510,-0.352359,-0.228158,-0.088709,-0.316279,-0.346290,-0.124723, 0.009946, 0.075166, 0.522305, 0.038541, 0.156271, 0.098760,-0.052241, 0.095923,-0.536926,-0.030178,-0.326291, 0.059545, 0.060683, 0.047361, 0.055350,-0.183086,-0.255936, 0.106648,-0.027698,-0.104796, 0.203385, 0.381035, 0.096751,-0.057660,-0.153524, 0.152858,-0.098051, 0.032580,-0.161510,-0.218255, 0.035894,-0.015041, 0.195519, 0.146547, 0.170194,-0.155655, 0.146357, 0.127888,-0.355498, 0.113717,-0.148008, 0.001431, 0.074213,-0.079308,-0.307494,-0.125781,-0.734724, 0.144942,-0.181675,-0.151934, 0.152530, 0.151115, 0.039744,-0.261185,-0.051415, 0.066306, 0.252487,-0.028533, 0.198680, 0.353765, 0.053906,-0.213833, 0.003543,-0.050155,-0.259626,-0.022127,-0.213294,-0.165129,-0.108209, 0.621123, 0.128978, 0.106885, 0.168204, 0.023255,-0.022595,-0.148681,-0.190108, 0.130030,-0.137998 },
{  0.450110, 0.241834,-0.626064,-0.034941,-0.288021,-0.260745,-0.349070,-0.138883,-0.010737,-0.496478, 0.029214,-0.676008, 0.046130,-0.183352,-0.025369,-0.242398, 0.051818,-0.119139, 0.293787,-0.157755,-0.372800, 0.134633, 0.318882,-0.003874,-0.277191,-0.660699, 0.467760, 0.427218, 0.096475,-0.171906,-0.523568, 0.173366,-0.040870,-0.217385,-0.288014, 0.453287,-0.153292, 0.025614,-0.619122, 0.102105, 0.214015,-0.048442, 0.289315,-0.288354,-0.044318,-0.179995, 0.371573,-0.184261,-0.367826,-0.024246, 0.365836,-0.235915, 0.660070, 0.115728, 0.372976,-0.165329,-0.278743,-0.481644,-0.000293, 0.106801,-0.414986,-0.374764,-0.247708, 0.088425, 0.508264,-0.275712, 0.167025,-0.080724, 0.416891, 0.391770, 0.386369, 0.447980, 0.288814, 0.100747, 0.204661, 0.064241, 0.046770,-0.044381,-0.109195, 0.374662, 0.415825, 0.562025, 0.447947,-0.126952, 0.497716,-0.139897,-0.027003,-0.135275,-0.601029, 0.074970, 0.368750, 0.399373,-0.303248,-0.120961, 0.173788,-0.128875,-0.230216, 0.656026, 0.316356,-0.216541,-0.144299, 0.478052,-0.059859,-0.089666, 0.269070,-0.062784, 0.136277, 0.086654, 0.264111, 0.342476,-0.101763, 0.010826,-0.299728,-0.399772, 0.129465, 0.432321, 0.004477, 0.353470, 0.070470,-0.000811,-0.052046,-0.212553, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.299832 },
};
static double savedWeightTensor_3[layer3_neuronNum][layer2_neuronNum + 1] =
{
{ -0.177717, 0.088080,-0.454525, 0.232948, 0.288416,-0.297169, 0.164695,-0.151583,-0.260615,-0.079335,-0.361888,-0.089691, 0.039424,-0.112622,-0.364023, 0.206988,-0.621090 },
{ -0.009386,-0.441921, 0.114979, 0.364883,-0.185507,-0.568153,-0.224979,-0.020798, 0.080342,-0.606819,-0.295622,-0.086805,-0.532669, 0.070335, 0.402857, 0.597372, 0.193446 },
{ -0.650373,-0.302612, 0.759764,-0.082472, 0.227759, 0.646188, 0.856966,-0.293642, 0.110602, 0.177431,-0.286700,-0.202395,-0.114149, 0.635342,-0.875032,-0.260597, 0.056563 },
{ -0.687105, 0.119746, 0.025277, 0.317231, 0.474250, 0.095770,-0.114759,-0.334840,-0.271887, 0.021032, 0.236742, 0.119063,-0.224434,-0.269572,-0.159271, 1.024785,-0.285322 },
{  0.262366,-0.596250, 0.286575, 0.399507,-0.427230,-0.607801,-0.888544,-0.146672,-0.273836,-0.261689, 0.234303, 0.437124,-0.385025, 0.721431,-0.200704,-0.120861, 0.484156 },
{  0.276293, 0.312413, 0.130043,-0.270697,-0.339563, 0.567764,-0.287484,-0.057985,-0.244568, 0.192889,-0.209296,-0.006795, 0.136201,-0.337142, 0.521254, 0.237234,-0.451491 },
{ -0.135880, 0.052379, 0.916640, 0.015299, 0.075828,-0.104552, 0.414599,-0.172155,-0.313653, 0.301843,-0.361233, 0.427084,-0.287935, 0.064826, 0.487316,-0.056704,-0.525504 },
{  0.025148,-0.340421,-0.340819, 0.054891, 0.414948,-0.344116, 0.075645, 0.095734,-0.357271,-0.595965, 0.100030, 0.217023,-0.538121, 0.145747, 0.185218, 0.623049,-0.402956 },
{  0.446247,-0.343588, 0.347849, 0.878830,-0.245047,-0.381789,-0.468801,-0.391089,-0.487152,-0.468092, 0.121967, 0.482071,-0.474542, 0.206709,-0.431269,-0.299468, 0.611470 },
{  0.521819,-0.574614, 0.290859, 0.833176,-0.358326,-0.341795,-0.394565, 0.024547,-0.851384,-0.584809, 0.069943, 0.678811,-0.632445,-0.084627,-0.467324,-0.263351, 0.603869 },
{ -0.388172, 0.664915,-0.230145,-0.545625,-0.225008, 0.963480, 0.696475, 0.262418, 0.241758, 0.717386,-0.639930, 0.095275,-0.219565, 0.586337,-0.793274,-0.359249, 0.260130 },
{  0.484289,-0.307714, 0.469179, 0.087881,-0.441864,-0.349738, 0.022726, 0.566960,-0.176186,-0.091694, 0.638079, 0.047623,-0.130391, 0.600783, 0.074188,-0.595232, 0.557922 },
{ -0.456162,-0.727360,-0.464366, 0.192837, 0.393316,-0.248557, 0.008573,-1.014673, 0.172622,-0.506142, 0.628650,-0.224816,-0.250023,-0.403115, 0.367877, 0.634179, 0.724547 },
{  0.006963, 0.159934, 0.355890,-0.703433,-0.047585,-0.277281, 0.315770, 0.825483, 0.780432, 0.184593,-0.680646,-0.803955, 1.202295,-0.637353, 0.567759,-0.697985, 0.252541 },
{ -0.008052,-0.076007,-0.035309,-0.292415,-0.179762,-0.273308,-0.118110, 0.289722,-0.324619, 0.234127, 0.263691, 0.211811,-0.387070,-0.211219, 0.566808,-0.208696,-0.307277 },
{ -0.307128, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 },
};
static double savedWeightTensor_4[layer4_neuronNum][layer3_neuronNum + 1] =
{
{ -0.033035, 0.177739,-0.182220, 0.022860, 0.183803, 0.248585,-0.210646, 0.137845,-0.091991,-0.152416,-0.348736, 0.120857, 0.185294,-0.410407,-0.312222, 0.390835, 0.403751 },
{  0.049796, 0.487165,-0.335463, 0.165943, 0.189979, 0.442466, 0.042502, 0.251761,-0.121824,-0.131750, 0.269268, 0.018501, 0.071492,-0.114099, 0.542349, 0.206900,-0.531058 },
{  0.082018,-0.132466,-0.330683, 0.138173,-0.438353,-0.056902,-0.083331,-0.078722,-0.204978, 0.020127,-0.221946,-0.211875,-0.344325,-0.388821,-0.184164, 0.251579,-0.494018 },
{  0.409521,-0.126313,-0.636077,-1.078948, 0.584104, 0.089777,-0.474422,-0.505507, 0.405389, 0.631630,-0.014063, 0.877950,-0.075498,-0.815483,-0.137559,-0.146168, 0.138964 },
{ -0.390256, 0.015139,-0.790592,-0.842294, 0.477997,-0.166012, 0.060737,-0.105681, 0.696553, 0.558685,-0.561709, 0.833805, 0.011844,-0.820889,-0.426490,-0.346828,-0.309176 },
{ -0.342782,-0.782884, 0.689045,-0.144545,-0.432331, 0.907499, 0.806351,-0.766338,-0.453315,-0.586226, 1.140193, 0.724252,-1.364785, 0.909840, 0.199698,-0.395932, 0.299146 },
{  0.091082,-0.084473,-0.144513,-0.044409,-0.068618,-0.422821, 0.288534,-0.340397, 0.165614,-0.118534, 0.169235, 0.138937,-0.150117, 0.096972,-0.063802,-0.112690,-0.455929 },
{ -0.234407,-0.275921, 0.168385, 0.122188, 0.100796, 0.247537,-0.179572,-0.479037, 0.196352,-0.069226,-0.015111, 0.035010, 0.018948,-0.000706,-0.002102, 0.000000,-0.037050 },
};
static double savedWeightTensor_5[layer5_neuronNum][layer4_neuronNum + 1] =
{
{ -0.033273, 0.029367,-0.336573,-1.545174,-1.550772, 2.241841,-0.059697, 0.107062, 0.010199 },
};

// 把保存的权重复制到这上面

static double weightTensor_1[layer1_neuronNum][inputLength + 1] = { 0 }; // 第一层权重矩阵
static double weightTensor_2[layer2_neuronNum][layer1_neuronNum + 1] = { 0 }; // 第二层权重矩阵
static double weightTensor_3[layer3_neuronNum][layer2_neuronNum + 1] = { 0 }; // 第三层权重矩阵
static double weightTensor_4[layer4_neuronNum][layer3_neuronNum + 1] = { 0 }; // 输四层权重矩阵
static double weightTensor_5[layer5_neuronNum][layer4_neuronNum + 1] = { 0 }; // 输出层权重矩阵

static double layer1_outputTensor[layer1_neuronNum] = { 0 };
static double layer2_outputTensor[layer2_neuronNum] = { 0 };
static double layer3_outputTensor[layer3_neuronNum] = { 0 };
static double layer4_outputTensor[layer4_neuronNum] = { 0 };
static double layer5_outputTensor[layer5_neuronNum] = { 0 };

static void UpdateWeights(
    double* inputTensor,
    double* layer1_outputTensor,
    double* layer2_outputTensor,
    double* layer3_outputTensor,
    double* layer4_outputTensor,
    double* layer5_outputTensor,
    double* labelTensor,
    double weightTensor_1[][inputLength + 1],
    double weightTensor_2[][layer1_neuronNum + 1],
    double weightTensor_3[][layer2_neuronNum + 1],
    double weightTensor_4[][layer3_neuronNum + 1],
    double weightTensor_5[][layer4_neuronNum + 1],
    double learningRate) {

    // 计算第五层梯度
    double layer5_error = LossDerivative(layer5_outputTensor[0], labelTensor[0]);
    layer5_error *= TanhDerivative(layer5_outputTensor[0]);
    // 计算第四层梯度
    double layer4_error[layer4_neuronNum];
    for (int j = 0; j < layer4_neuronNum; j++) {
        layer4_error[j] = layer5_error * weightTensor_5[0][j];
        layer4_error[j] *= ReLUDerivative(layer4_outputTensor[j]);
    }
    // 计算第三层梯度
    double layer3_error[layer3_neuronNum];
    for (int j = 0; j < layer3_neuronNum; j++) {
        layer3_error[j] = 0;
        for (int k = 0; k < layer4_neuronNum; k++) {
            layer3_error[j] += layer4_error[k] * weightTensor_4[k][j];
        }
        layer3_error[j] *= ReLUDerivative(layer3_outputTensor[j]);
    }
    // 计算第二层梯度
    double layer2_error[layer2_neuronNum];
    for (int j = 0; j < layer2_neuronNum; j++) {
        layer2_error[j] = 0;
        for (int k = 0; k < layer3_neuronNum; k++) {
            layer2_error[j] += layer3_error[k] * weightTensor_3[k][j];
        }
        layer2_error[j] *= ReLUDerivative(layer2_outputTensor[j]);
    }
    // 计算第一层梯度
    double layer1_error[layer1_neuronNum];
    for (int j = 0; j < layer1_neuronNum; j++) {
        layer1_error[j] = 0;
        for (int k = 0; k < layer2_neuronNum; k++) {
            layer1_error[j] += layer2_error[k] * weightTensor_2[k][j];
        }
        layer1_error[j] *= ReLUDerivative(layer1_outputTensor[j]);
    }

    // 更新第五层权重和偏置
    for (int j = 0; j < layer4_neuronNum; j++) {
        weightTensor_5[0][j] -= learningRate * layer5_error * layer4_outputTensor[j];
    }
    weightTensor_5[0][layer4_neuronNum] -= learningRate * layer5_error;
    // 更新第四层权重和偏置
    for (int j = 0; j < layer4_neuronNum; j++) {
        for (int k = 0; k < layer3_neuronNum; k++) {
            weightTensor_4[j][k] -= learningRate * layer4_error[j] * layer3_outputTensor[k];
        }
        weightTensor_4[j][layer3_neuronNum] -= learningRate * layer4_error[j];
    }
    // 更新第三层权重和偏置
    for (int j = 0; j < layer3_neuronNum; j++) {
        for (int k = 0; k < layer2_neuronNum; k++) {
            weightTensor_3[j][k] -= learningRate * layer3_error[j] * layer2_outputTensor[k];
        }
        weightTensor_3[j][layer2_neuronNum] -= learningRate * layer3_error[j];
    }
    // 更新第二层权重和偏置
    for (int j = 0; j < layer2_neuronNum; j++) {
        for (int k = 0; k < layer1_neuronNum; k++) {
            weightTensor_2[j][k] -= learningRate * layer2_error[j] * layer1_outputTensor[k];
        }
        weightTensor_2[j][layer1_neuronNum] -= learningRate * layer2_error[j];
    }
    // 更新第一层权重和偏置
    for (int j = 0; j < layer1_neuronNum; j++) {
        for (int k = 0; k < inputLength; k++) {
            weightTensor_1[j][k] -= learningRate * layer1_error[j] * inputTensor[k];
        }
        weightTensor_1[j][inputLength] -= learningRate * layer1_error[j];
    }
}

static double Forward(
    double* inputTensor,
    double weightTensor_1[][inputLength + 1],
    double weightTensor_2[][layer1_neuronNum + 1],
    double weightTensor_3[][layer2_neuronNum + 1],
    double weightTensor_4[][layer3_neuronNum + 1],
    double weightTensor_5[][layer4_neuronNum + 1],
    double* layer1_outputTensor,
    double* layer2_outputTensor,
    double* layer3_outputTensor,
    double* layer4_outputTensor,
    double* layer5_outputTensor) {
    // 第一层有 layer1_neuronNum 个神经元
    for (int i = 0; i < layer1_neuronNum; i++) {
        layer1_outputTensor[i] = Linear(inputTensor, inputLength, weightTensor_1[i]);
        layer1_outputTensor[i] = ReLU(layer1_outputTensor[i]);
    }
    // 第二层有 layer2_neuronNum 个神经元
    for (int i = 0; i < layer2_neuronNum; i++) {
        layer2_outputTensor[i] = Linear(layer1_outputTensor, layer1_neuronNum, weightTensor_2[i]);
        layer2_outputTensor[i] = ReLU(layer2_outputTensor[i]);
    }
    // 第三层有 layer3_neuronNum 个神经元
    for (int i = 0; i < layer3_neuronNum; i++) {
        layer3_outputTensor[i] = Linear(layer2_outputTensor, layer2_neuronNum, weightTensor_3[i]);
        layer3_outputTensor[i] = ReLU(layer3_outputTensor[i]);
    }
    // 第四层有 layer4_neuronNum 个神经元
    for (int i = 0; i < layer4_neuronNum; i++) {
        layer4_outputTensor[i] = Linear(layer3_outputTensor, layer3_neuronNum, weightTensor_4[i]);
        layer4_outputTensor[i] = ReLU(layer4_outputTensor[i]);
    }
    // 输出层只有一个神经元
    layer5_outputTensor[0] = Linear(layer4_outputTensor, layer4_neuronNum, weightTensor_5[0]);
    layer5_outputTensor[0] = Tanh(layer5_outputTensor[0]);

    return layer5_outputTensor[0];
}

// 以下是对外函数

void UpdateWeights_5Layers_NN(double* inputTensor, double* labelTensor, double learningRate) {
    UpdateWeights(
        inputTensor,
        layer1_outputTensor,
        layer2_outputTensor,
        layer3_outputTensor,
        layer4_outputTensor,
        layer5_outputTensor,
        labelTensor,
        weightTensor_1,
        weightTensor_2,
        weightTensor_3,
        weightTensor_4,
        weightTensor_5,
        learningRate);
}

double Forward_5Layers_NN(double* inputTensor) {
    return Forward(
        inputTensor,
        weightTensor_1,
        weightTensor_2,
        weightTensor_3,
        weightTensor_4,
        weightTensor_5,
        layer1_outputTensor,
        layer2_outputTensor,
        layer3_outputTensor,
        layer4_outputTensor,
        layer5_outputTensor);
}

void Randomized_5Layers_NN_Weight(int seed) {
    srand(seed);
    // ReLU 神经元用 He 初始化权重，Sigmoid 神经元用 Xavier 初始化权重
    XavierInitialize(&weightTensor_1[0][0], layer1_neuronNum, inputLength + 1);
    XavierInitialize(&weightTensor_2[0][0], layer2_neuronNum, layer1_neuronNum + 1);
    XavierInitialize(&weightTensor_3[0][0], layer3_neuronNum, layer2_neuronNum + 1);
    XavierInitialize(&weightTensor_4[0][0], layer4_neuronNum, layer3_neuronNum + 1);
    HeInitialize(&weightTensor_5[0][0], layer5_neuronNum, layer4_neuronNum + 1);
    printf("Weight Randomized.\n");
}

void Print_5Layers_NN_Weight() {
    printf("static double savedWeightTensor_1[layer1_neuronNum][inputLength + 1] = \n");
    Print_Tensor((double*)weightTensor_1, layer1_neuronNum, inputLength + 1);
    printf("static double savedWeightTensor_2[layer2_neuronNum][layer1_neuronNum + 1] = \n");
    Print_Tensor((double*)weightTensor_2, layer2_neuronNum, layer1_neuronNum + 1);
    printf("static double savedWeightTensor_3[layer3_neuronNum][layer2_neuronNum + 1] = \n");
    Print_Tensor((double*)weightTensor_3, layer3_neuronNum, layer2_neuronNum + 1);
    printf("static double savedWeightTensor_4[layer4_neuronNum][layer3_neuronNum + 1] = \n");
    Print_Tensor((double*)weightTensor_4, layer4_neuronNum, layer3_neuronNum + 1);
    printf("static double savedWeightTensor_5[layer5_neuronNum][layer4_neuronNum + 1] = \n");
    Print_Tensor((double*)weightTensor_5, layer5_neuronNum, layer4_neuronNum + 1);
}

void Load_5layers_NN_Weight() {
    for (int i = 0; i < layer1_neuronNum; i++) {
        for (int j = 0; j < inputLength + 1; j++) {
            weightTensor_1[i][j] = savedWeightTensor_1[i][j];
        }
    }
    for (int i = 0; i < layer2_neuronNum; i++) {
        for (int j = 0; j < layer1_neuronNum + 1; j++) {
            weightTensor_2[i][j] = savedWeightTensor_2[i][j];
        }
    }
    for (int i = 0; i < layer3_neuronNum; i++) {
        for (int j = 0; j < layer2_neuronNum + 1; j++) {
            weightTensor_3[i][j] = savedWeightTensor_3[i][j];
        }
    }
    for (int i = 0; i < layer4_neuronNum; i++) {
        for (int j = 0; j < layer3_neuronNum + 1; j++) {
            weightTensor_4[i][j] = savedWeightTensor_4[i][j];
        }
    }
    for (int i = 0; i < layer5_neuronNum; i++) {
        for (int j = 0; j < layer4_neuronNum + 1; j++) {
            weightTensor_5[i][j] = savedWeightTensor_5[i][j];
        }
    }
    printf("Loaded 5 Layers Dense NN Weight. (%d -> %d -> %d -> %d -> %d)\n",
        layer1_neuronNum, layer2_neuronNum, layer3_neuronNum, layer4_neuronNum, layer5_neuronNum);
}